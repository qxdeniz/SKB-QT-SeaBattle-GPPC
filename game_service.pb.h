// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: game_service.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_game_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_game_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_game_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_game_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_game_5fservice_2eproto;
class AttackRequest;
struct AttackRequestDefaultTypeInternal;
extern AttackRequestDefaultTypeInternal _AttackRequest_default_instance_;
class AttackResponse;
struct AttackResponseDefaultTypeInternal;
extern AttackResponseDefaultTypeInternal _AttackResponse_default_instance_;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class GameFormat;
struct GameFormatDefaultTypeInternal;
extern GameFormatDefaultTypeInternal _GameFormat_default_instance_;
class GameList;
struct GameListDefaultTypeInternal;
extern GameListDefaultTypeInternal _GameList_default_instance_;
class GameMessage;
struct GameMessageDefaultTypeInternal;
extern GameMessageDefaultTypeInternal _GameMessage_default_instance_;
class GameRequest;
struct GameRequestDefaultTypeInternal;
extern GameRequestDefaultTypeInternal _GameRequest_default_instance_;
class GameResponse;
struct GameResponseDefaultTypeInternal;
extern GameResponseDefaultTypeInternal _GameResponse_default_instance_;
class PlaceShipsRequest;
struct PlaceShipsRequestDefaultTypeInternal;
extern PlaceShipsRequestDefaultTypeInternal _PlaceShipsRequest_default_instance_;
class PlayerFieldResponse;
struct PlayerFieldResponseDefaultTypeInternal;
extern PlayerFieldResponseDefaultTypeInternal _PlayerFieldResponse_default_instance_;
class PlayerRequest;
struct PlayerRequestDefaultTypeInternal;
extern PlayerRequestDefaultTypeInternal _PlayerRequest_default_instance_;
class Ship;
struct ShipDefaultTypeInternal;
extern ShipDefaultTypeInternal _Ship_default_instance_;
class Ships;
struct ShipsDefaultTypeInternal;
extern ShipsDefaultTypeInternal _Ships_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Ship final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Ship) */ {
 public:
  inline Ship() : Ship(nullptr) {}
  ~Ship() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Ship(
      ::google::protobuf::internal::ConstantInitialized);

  inline Ship(const Ship& from) : Ship(nullptr, from) {}
  inline Ship(Ship&& from) noexcept
      : Ship(nullptr, std::move(from)) {}
  inline Ship& operator=(const Ship& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ship& operator=(Ship&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ship& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ship* internal_default_instance() {
    return reinterpret_cast<const Ship*>(
        &_Ship_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Ship& a, Ship& b) { a.Swap(&b); }
  inline void Swap(Ship* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ship* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ship* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Ship>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Ship& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Ship& from) { Ship::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Ship* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Ship"; }

 protected:
  explicit Ship(::google::protobuf::Arena* arena);
  Ship(::google::protobuf::Arena* arena, const Ship& from);
  Ship(::google::protobuf::Arena* arena, Ship&& from) noexcept
      : Ship(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRowFieldNumber = 1,
    kColFieldNumber = 2,
  };
  // int32 row = 1;
  void clear_row() ;
  ::int32_t row() const;
  void set_row(::int32_t value);

  private:
  ::int32_t _internal_row() const;
  void _internal_set_row(::int32_t value);

  public:
  // int32 col = 2;
  void clear_col() ;
  ::int32_t col() const;
  void set_col(::int32_t value);

  private:
  ::int32_t _internal_col() const;
  void _internal_set_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Ship)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Ship_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Ship& from_msg);
    ::int32_t row_;
    ::int32_t col_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PlayerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerRequest) */ {
 public:
  inline PlayerRequest() : PlayerRequest(nullptr) {}
  ~PlayerRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerRequest(const PlayerRequest& from) : PlayerRequest(nullptr, from) {}
  inline PlayerRequest(PlayerRequest&& from) noexcept
      : PlayerRequest(nullptr, std::move(from)) {}
  inline PlayerRequest& operator=(const PlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerRequest& operator=(PlayerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerRequest*>(
        &_PlayerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PlayerRequest& a, PlayerRequest& b) { a.Swap(&b); }
  inline void Swap(PlayerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PlayerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerRequest& from) { PlayerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PlayerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PlayerRequest"; }

 protected:
  explicit PlayerRequest(::google::protobuf::Arena* arena);
  PlayerRequest(::google::protobuf::Arena* arena, const PlayerRequest& from);
  PlayerRequest(::google::protobuf::Arena* arena, PlayerRequest&& from) noexcept
      : PlayerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
    kPlayerFieldNumber = 2,
  };
  // string game_id = 1;
  void clear_game_id() ;
  const std::string& game_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game_id(Arg_&& arg, Args_... args);
  std::string* mutable_game_id();
  PROTOBUF_NODISCARD std::string* release_game_id();
  void set_allocated_game_id(std::string* value);

  private:
  const std::string& _internal_game_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_id(
      const std::string& value);
  std::string* _internal_mutable_game_id();

  public:
  // string player = 2;
  void clear_player() ;
  const std::string& player() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player(Arg_&& arg, Args_... args);
  std::string* mutable_player();
  PROTOBUF_NODISCARD std::string* release_player();
  void set_allocated_player(std::string* value);

  private:
  const std::string& _internal_player() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player(
      const std::string& value);
  std::string* _internal_mutable_player();

  public:
  // @@protoc_insertion_point(class_scope:PlayerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PlayerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr game_id_;
    ::google::protobuf::internal::ArenaStringPtr player_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameResponse) */ {
 public:
  inline GameResponse() : GameResponse(nullptr) {}
  ~GameResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameResponse(const GameResponse& from) : GameResponse(nullptr, from) {}
  inline GameResponse(GameResponse&& from) noexcept
      : GameResponse(nullptr, std::move(from)) {}
  inline GameResponse& operator=(const GameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameResponse& operator=(GameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameResponse* internal_default_instance() {
    return reinterpret_cast<const GameResponse*>(
        &_GameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GameResponse& a, GameResponse& b) { a.Swap(&b); }
  inline void Swap(GameResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameResponse& from) { GameResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameResponse"; }

 protected:
  explicit GameResponse(::google::protobuf::Arena* arena);
  GameResponse(::google::protobuf::Arena* arena, const GameResponse& from);
  GameResponse(::google::protobuf::Arena* arena, GameResponse&& from) noexcept
      : GameResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
  };
  // string game_id = 1;
  void clear_game_id() ;
  const std::string& game_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game_id(Arg_&& arg, Args_... args);
  std::string* mutable_game_id();
  PROTOBUF_NODISCARD std::string* release_game_id();
  void set_allocated_game_id(std::string* value);

  private:
  const std::string& _internal_game_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_id(
      const std::string& value);
  std::string* _internal_mutable_game_id();

  public:
  // @@protoc_insertion_point(class_scope:GameResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      28, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr game_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameRequest) */ {
 public:
  inline GameRequest() : GameRequest(nullptr) {}
  ~GameRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameRequest(const GameRequest& from) : GameRequest(nullptr, from) {}
  inline GameRequest(GameRequest&& from) noexcept
      : GameRequest(nullptr, std::move(from)) {}
  inline GameRequest& operator=(const GameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameRequest& operator=(GameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameRequest* internal_default_instance() {
    return reinterpret_cast<const GameRequest*>(
        &_GameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GameRequest& a, GameRequest& b) { a.Swap(&b); }
  inline void Swap(GameRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameRequest& from) { GameRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameRequest"; }

 protected:
  explicit GameRequest(::google::protobuf::Arena* arena);
  GameRequest(::google::protobuf::Arena* arena, const GameRequest& from);
  GameRequest(::google::protobuf::Arena* arena, GameRequest&& from) noexcept
      : GameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
    kFormatFieldNumber = 2,
  };
  // string game_id = 1;
  void clear_game_id() ;
  const std::string& game_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game_id(Arg_&& arg, Args_... args);
  std::string* mutable_game_id();
  PROTOBUF_NODISCARD std::string* release_game_id();
  void set_allocated_game_id(std::string* value);

  private:
  const std::string& _internal_game_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_id(
      const std::string& value);
  std::string* _internal_mutable_game_id();

  public:
  // string format = 2;
  void clear_format() ;
  const std::string& format() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_format(Arg_&& arg, Args_... args);
  std::string* mutable_format();
  PROTOBUF_NODISCARD std::string* release_format();
  void set_allocated_format(std::string* value);

  private:
  const std::string& _internal_format() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_format(
      const std::string& value);
  std::string* _internal_mutable_format();

  public:
  // @@protoc_insertion_point(class_scope:GameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr game_id_;
    ::google::protobuf::internal::ArenaStringPtr format_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameMessage) */ {
 public:
  inline GameMessage() : GameMessage(nullptr) {}
  ~GameMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameMessage(const GameMessage& from) : GameMessage(nullptr, from) {}
  inline GameMessage(GameMessage&& from) noexcept
      : GameMessage(nullptr, std::move(from)) {}
  inline GameMessage& operator=(const GameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameMessage& operator=(GameMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameMessage* internal_default_instance() {
    return reinterpret_cast<const GameMessage*>(
        &_GameMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GameMessage& a, GameMessage& b) { a.Swap(&b); }
  inline void Swap(GameMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameMessage& from) { GameMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameMessage"; }

 protected:
  explicit GameMessage(::google::protobuf::Arena* arena);
  GameMessage(::google::protobuf::Arena* arena, const GameMessage& from);
  GameMessage(::google::protobuf::Arena* arena, GameMessage&& from) noexcept
      : GameMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:GameMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      27, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameList) */ {
 public:
  inline GameList() : GameList(nullptr) {}
  ~GameList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameList(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameList(const GameList& from) : GameList(nullptr, from) {}
  inline GameList(GameList&& from) noexcept
      : GameList(nullptr, std::move(from)) {}
  inline GameList& operator=(const GameList& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameList& operator=(GameList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameList& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameList* internal_default_instance() {
    return reinterpret_cast<const GameList*>(
        &_GameList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GameList& a, GameList& b) { a.Swap(&b); }
  inline void Swap(GameList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameList& from) { GameList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameList"; }

 protected:
  explicit GameList(::google::protobuf::Arena* arena);
  GameList(::google::protobuf::Arena* arena, const GameList& from);
  GameList(::google::protobuf::Arena* arena, GameList&& from) noexcept
      : GameList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGamesFieldNumber = 1,
  };
  // repeated string games = 1;
  int games_size() const;
  private:
  int _internal_games_size() const;

  public:
  void clear_games() ;
  const std::string& games(int index) const;
  std::string* mutable_games(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_games(int index, Arg_&& value, Args_... args);
  std::string* add_games();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_games(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& games() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_games();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_games() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_games();

  public:
  // @@protoc_insertion_point(class_scope:GameList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      22, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameList& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> games_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GameFormat final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameFormat) */ {
 public:
  inline GameFormat() : GameFormat(nullptr) {}
  ~GameFormat() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameFormat(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameFormat(const GameFormat& from) : GameFormat(nullptr, from) {}
  inline GameFormat(GameFormat&& from) noexcept
      : GameFormat(nullptr, std::move(from)) {}
  inline GameFormat& operator=(const GameFormat& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameFormat& operator=(GameFormat&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameFormat& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameFormat* internal_default_instance() {
    return reinterpret_cast<const GameFormat*>(
        &_GameFormat_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GameFormat& a, GameFormat& b) { a.Swap(&b); }
  inline void Swap(GameFormat* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameFormat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameFormat* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GameFormat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameFormat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameFormat& from) { GameFormat::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameFormat* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameFormat"; }

 protected:
  explicit GameFormat(::google::protobuf::Arena* arena);
  GameFormat(::google::protobuf::Arena* arena, const GameFormat& from);
  GameFormat(::google::protobuf::Arena* arena, GameFormat&& from) noexcept
      : GameFormat(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFormatFieldNumber = 1,
  };
  // string format = 1;
  void clear_format() ;
  const std::string& format() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_format(Arg_&& arg, Args_... args);
  std::string* mutable_format();
  PROTOBUF_NODISCARD std::string* release_format();
  void set_allocated_format(std::string* value);

  private:
  const std::string& _internal_format() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_format(
      const std::string& value);
  std::string* _internal_mutable_format();

  public:
  // @@protoc_insertion_point(class_scope:GameFormat)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      25, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameFormat_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameFormat& from_msg);
    ::google::protobuf::internal::ArenaStringPtr format_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Empty final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(
      ::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from) : Empty(nullptr, from) {}
  inline Empty(Empty&& from) noexcept
      : Empty(nullptr, std::move(from)) {}
  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
        &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Empty& a, Empty& b) { a.Swap(&b); }
  inline void Swap(Empty* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Empty"; }

 protected:
  explicit Empty(::google::protobuf::Arena* arena);
  Empty(::google::protobuf::Arena* arena, const Empty& from);
  Empty(::google::protobuf::Arena* arena, Empty&& from) noexcept
      : Empty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Empty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Empty_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Empty& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AttackResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AttackResponse) */ {
 public:
  inline AttackResponse() : AttackResponse(nullptr) {}
  ~AttackResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AttackResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AttackResponse(const AttackResponse& from) : AttackResponse(nullptr, from) {}
  inline AttackResponse(AttackResponse&& from) noexcept
      : AttackResponse(nullptr, std::move(from)) {}
  inline AttackResponse& operator=(const AttackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttackResponse& operator=(AttackResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttackResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttackResponse* internal_default_instance() {
    return reinterpret_cast<const AttackResponse*>(
        &_AttackResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(AttackResponse& a, AttackResponse& b) { a.Swap(&b); }
  inline void Swap(AttackResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttackResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttackResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AttackResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttackResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AttackResponse& from) { AttackResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttackResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "AttackResponse"; }

 protected:
  explicit AttackResponse(::google::protobuf::Arena* arena);
  AttackResponse(::google::protobuf::Arena* arena, const AttackResponse& from);
  AttackResponse(::google::protobuf::Arena* arena, AttackResponse&& from) noexcept
      : AttackResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
    kWinnerFieldNumber = 3,
    kAiResultFieldNumber = 8,
    kVictoryFieldNumber = 2,
    kRowFieldNumber = 4,
    kColFieldNumber = 5,
    kAiRowFieldNumber = 6,
    kAiColFieldNumber = 7,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // string winner = 3;
  void clear_winner() ;
  const std::string& winner() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_winner(Arg_&& arg, Args_... args);
  std::string* mutable_winner();
  PROTOBUF_NODISCARD std::string* release_winner();
  void set_allocated_winner(std::string* value);

  private:
  const std::string& _internal_winner() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_winner(
      const std::string& value);
  std::string* _internal_mutable_winner();

  public:
  // string ai_result = 8;
  void clear_ai_result() ;
  const std::string& ai_result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ai_result(Arg_&& arg, Args_... args);
  std::string* mutable_ai_result();
  PROTOBUF_NODISCARD std::string* release_ai_result();
  void set_allocated_ai_result(std::string* value);

  private:
  const std::string& _internal_ai_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ai_result(
      const std::string& value);
  std::string* _internal_mutable_ai_result();

  public:
  // bool victory = 2;
  void clear_victory() ;
  bool victory() const;
  void set_victory(bool value);

  private:
  bool _internal_victory() const;
  void _internal_set_victory(bool value);

  public:
  // int32 row = 4;
  void clear_row() ;
  ::int32_t row() const;
  void set_row(::int32_t value);

  private:
  ::int32_t _internal_row() const;
  void _internal_set_row(::int32_t value);

  public:
  // int32 col = 5;
  void clear_col() ;
  ::int32_t col() const;
  void set_col(::int32_t value);

  private:
  ::int32_t _internal_col() const;
  void _internal_set_col(::int32_t value);

  public:
  // int32 ai_row = 6;
  void clear_ai_row() ;
  ::int32_t ai_row() const;
  void set_ai_row(::int32_t value);

  private:
  ::int32_t _internal_ai_row() const;
  void _internal_set_ai_row(::int32_t value);

  public:
  // int32 ai_col = 7;
  void clear_ai_col() ;
  ::int32_t ai_col() const;
  void set_ai_col(::int32_t value);

  private:
  ::int32_t _internal_ai_col() const;
  void _internal_set_ai_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:AttackResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AttackResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AttackResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr result_;
    ::google::protobuf::internal::ArenaStringPtr winner_;
    ::google::protobuf::internal::ArenaStringPtr ai_result_;
    bool victory_;
    ::int32_t row_;
    ::int32_t col_;
    ::int32_t ai_row_;
    ::int32_t ai_col_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AttackRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AttackRequest) */ {
 public:
  inline AttackRequest() : AttackRequest(nullptr) {}
  ~AttackRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AttackRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AttackRequest(const AttackRequest& from) : AttackRequest(nullptr, from) {}
  inline AttackRequest(AttackRequest&& from) noexcept
      : AttackRequest(nullptr, std::move(from)) {}
  inline AttackRequest& operator=(const AttackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttackRequest& operator=(AttackRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttackRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttackRequest* internal_default_instance() {
    return reinterpret_cast<const AttackRequest*>(
        &_AttackRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(AttackRequest& a, AttackRequest& b) { a.Swap(&b); }
  inline void Swap(AttackRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttackRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttackRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AttackRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttackRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AttackRequest& from) { AttackRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttackRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "AttackRequest"; }

 protected:
  explicit AttackRequest(::google::protobuf::Arena* arena);
  AttackRequest(::google::protobuf::Arena* arena, const AttackRequest& from);
  AttackRequest(::google::protobuf::Arena* arena, AttackRequest&& from) noexcept
      : AttackRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
    kPlayerFieldNumber = 2,
    kRowFieldNumber = 3,
    kColFieldNumber = 4,
  };
  // string game_id = 1;
  void clear_game_id() ;
  const std::string& game_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game_id(Arg_&& arg, Args_... args);
  std::string* mutable_game_id();
  PROTOBUF_NODISCARD std::string* release_game_id();
  void set_allocated_game_id(std::string* value);

  private:
  const std::string& _internal_game_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_id(
      const std::string& value);
  std::string* _internal_mutable_game_id();

  public:
  // string player = 2;
  void clear_player() ;
  const std::string& player() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player(Arg_&& arg, Args_... args);
  std::string* mutable_player();
  PROTOBUF_NODISCARD std::string* release_player();
  void set_allocated_player(std::string* value);

  private:
  const std::string& _internal_player() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player(
      const std::string& value);
  std::string* _internal_mutable_player();

  public:
  // int32 row = 3;
  void clear_row() ;
  ::int32_t row() const;
  void set_row(::int32_t value);

  private:
  ::int32_t _internal_row() const;
  void _internal_set_row(::int32_t value);

  public:
  // int32 col = 4;
  void clear_col() ;
  ::int32_t col() const;
  void set_col(::int32_t value);

  private:
  ::int32_t _internal_col() const;
  void _internal_set_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:AttackRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AttackRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AttackRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr game_id_;
    ::google::protobuf::internal::ArenaStringPtr player_;
    ::int32_t row_;
    ::int32_t col_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Ships final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Ships) */ {
 public:
  inline Ships() : Ships(nullptr) {}
  ~Ships() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Ships(
      ::google::protobuf::internal::ConstantInitialized);

  inline Ships(const Ships& from) : Ships(nullptr, from) {}
  inline Ships(Ships&& from) noexcept
      : Ships(nullptr, std::move(from)) {}
  inline Ships& operator=(const Ships& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ships& operator=(Ships&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ships& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ships* internal_default_instance() {
    return reinterpret_cast<const Ships*>(
        &_Ships_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Ships& a, Ships& b) { a.Swap(&b); }
  inline void Swap(Ships* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ships* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ships* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Ships>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Ships& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Ships& from) { Ships::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Ships* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Ships"; }

 protected:
  explicit Ships(::google::protobuf::Arena* arena);
  Ships(::google::protobuf::Arena* arena, const Ships& from);
  Ships(::google::protobuf::Arena* arena, Ships&& from) noexcept
      : Ships(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShipsFieldNumber = 1,
  };
  // repeated .Ship ships = 1;
  int ships_size() const;
  private:
  int _internal_ships_size() const;

  public:
  void clear_ships() ;
  ::Ship* mutable_ships(int index);
  ::google::protobuf::RepeatedPtrField<::Ship>* mutable_ships();

  private:
  const ::google::protobuf::RepeatedPtrField<::Ship>& _internal_ships() const;
  ::google::protobuf::RepeatedPtrField<::Ship>* _internal_mutable_ships();
  public:
  const ::Ship& ships(int index) const;
  ::Ship* add_ships();
  const ::google::protobuf::RepeatedPtrField<::Ship>& ships() const;
  // @@protoc_insertion_point(class_scope:Ships)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Ships_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Ships& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Ship > ships_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PlayerFieldResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerFieldResponse) */ {
 public:
  inline PlayerFieldResponse() : PlayerFieldResponse(nullptr) {}
  ~PlayerFieldResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerFieldResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerFieldResponse(const PlayerFieldResponse& from) : PlayerFieldResponse(nullptr, from) {}
  inline PlayerFieldResponse(PlayerFieldResponse&& from) noexcept
      : PlayerFieldResponse(nullptr, std::move(from)) {}
  inline PlayerFieldResponse& operator=(const PlayerFieldResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerFieldResponse& operator=(PlayerFieldResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerFieldResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerFieldResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerFieldResponse*>(
        &_PlayerFieldResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(PlayerFieldResponse& a, PlayerFieldResponse& b) { a.Swap(&b); }
  inline void Swap(PlayerFieldResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerFieldResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerFieldResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PlayerFieldResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerFieldResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerFieldResponse& from) { PlayerFieldResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PlayerFieldResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PlayerFieldResponse"; }

 protected:
  explicit PlayerFieldResponse(::google::protobuf::Arena* arena);
  PlayerFieldResponse(::google::protobuf::Arena* arena, const PlayerFieldResponse& from);
  PlayerFieldResponse(::google::protobuf::Arena* arena, PlayerFieldResponse&& from) noexcept
      : PlayerFieldResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShipsFieldNumber = 1,
  };
  // repeated .Ship ships = 1;
  int ships_size() const;
  private:
  int _internal_ships_size() const;

  public:
  void clear_ships() ;
  ::Ship* mutable_ships(int index);
  ::google::protobuf::RepeatedPtrField<::Ship>* mutable_ships();

  private:
  const ::google::protobuf::RepeatedPtrField<::Ship>& _internal_ships() const;
  ::google::protobuf::RepeatedPtrField<::Ship>* _internal_mutable_ships();
  public:
  const ::Ship& ships(int index) const;
  ::Ship* add_ships();
  const ::google::protobuf::RepeatedPtrField<::Ship>& ships() const;
  // @@protoc_insertion_point(class_scope:PlayerFieldResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PlayerFieldResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerFieldResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Ship > ships_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PlaceShipsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlaceShipsRequest) */ {
 public:
  inline PlaceShipsRequest() : PlaceShipsRequest(nullptr) {}
  ~PlaceShipsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlaceShipsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlaceShipsRequest(const PlaceShipsRequest& from) : PlaceShipsRequest(nullptr, from) {}
  inline PlaceShipsRequest(PlaceShipsRequest&& from) noexcept
      : PlaceShipsRequest(nullptr, std::move(from)) {}
  inline PlaceShipsRequest& operator=(const PlaceShipsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlaceShipsRequest& operator=(PlaceShipsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlaceShipsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlaceShipsRequest* internal_default_instance() {
    return reinterpret_cast<const PlaceShipsRequest*>(
        &_PlaceShipsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(PlaceShipsRequest& a, PlaceShipsRequest& b) { a.Swap(&b); }
  inline void Swap(PlaceShipsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlaceShipsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlaceShipsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PlaceShipsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlaceShipsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlaceShipsRequest& from) { PlaceShipsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PlaceShipsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "PlaceShipsRequest"; }

 protected:
  explicit PlaceShipsRequest(::google::protobuf::Arena* arena);
  PlaceShipsRequest(::google::protobuf::Arena* arena, const PlaceShipsRequest& from);
  PlaceShipsRequest(::google::protobuf::Arena* arena, PlaceShipsRequest&& from) noexcept
      : PlaceShipsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGameIdFieldNumber = 1,
    kPlayerFieldNumber = 2,
    kShipsFieldNumber = 3,
  };
  // string game_id = 1;
  void clear_game_id() ;
  const std::string& game_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_game_id(Arg_&& arg, Args_... args);
  std::string* mutable_game_id();
  PROTOBUF_NODISCARD std::string* release_game_id();
  void set_allocated_game_id(std::string* value);

  private:
  const std::string& _internal_game_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_id(
      const std::string& value);
  std::string* _internal_mutable_game_id();

  public:
  // string player = 2;
  void clear_player() ;
  const std::string& player() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player(Arg_&& arg, Args_... args);
  std::string* mutable_player();
  PROTOBUF_NODISCARD std::string* release_player();
  void set_allocated_player(std::string* value);

  private:
  const std::string& _internal_player() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player(
      const std::string& value);
  std::string* _internal_mutable_player();

  public:
  // .Ships ships = 3;
  bool has_ships() const;
  void clear_ships() ;
  const ::Ships& ships() const;
  PROTOBUF_NODISCARD ::Ships* release_ships();
  ::Ships* mutable_ships();
  void set_allocated_ships(::Ships* value);
  void unsafe_arena_set_allocated_ships(::Ships* value);
  ::Ships* unsafe_arena_release_ships();

  private:
  const ::Ships& _internal_ships() const;
  ::Ships* _internal_mutable_ships();

  public:
  // @@protoc_insertion_point(class_scope:PlaceShipsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PlaceShipsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlaceShipsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr game_id_;
    ::google::protobuf::internal::ArenaStringPtr player_;
    ::Ships* ships_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// GameFormat

// string format = 1;
inline void GameFormat::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.ClearToEmpty();
}
inline const std::string& GameFormat::format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameFormat.format)
  return _internal_format();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameFormat::set_format(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GameFormat.format)
}
inline std::string* GameFormat::mutable_format() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_format();
  // @@protoc_insertion_point(field_mutable:GameFormat.format)
  return _s;
}
inline const std::string& GameFormat::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_.Get();
}
inline void GameFormat::_internal_set_format(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.Set(value, GetArena());
}
inline std::string* GameFormat::_internal_mutable_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.format_.Mutable( GetArena());
}
inline std::string* GameFormat::release_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameFormat.format)
  return _impl_.format_.Release();
}
inline void GameFormat::set_allocated_format(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.format_.IsDefault()) {
          _impl_.format_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GameFormat.format)
}

// -------------------------------------------------------------------

// GameResponse

// string game_id = 1;
inline void GameResponse::clear_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.ClearToEmpty();
}
inline const std::string& GameResponse::game_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameResponse.game_id)
  return _internal_game_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameResponse::set_game_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GameResponse.game_id)
}
inline std::string* GameResponse::mutable_game_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game_id();
  // @@protoc_insertion_point(field_mutable:GameResponse.game_id)
  return _s;
}
inline const std::string& GameResponse::_internal_game_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_id_.Get();
}
inline void GameResponse::_internal_set_game_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(value, GetArena());
}
inline std::string* GameResponse::_internal_mutable_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.game_id_.Mutable( GetArena());
}
inline std::string* GameResponse::release_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameResponse.game_id)
  return _impl_.game_id_.Release();
}
inline void GameResponse::set_allocated_game_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.game_id_.IsDefault()) {
          _impl_.game_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GameResponse.game_id)
}

// -------------------------------------------------------------------

// GameList

// repeated string games = 1;
inline int GameList::_internal_games_size() const {
  return _internal_games().size();
}
inline int GameList::games_size() const {
  return _internal_games_size();
}
inline void GameList::clear_games() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.games_.Clear();
}
inline std::string* GameList::add_games() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_games()->Add();
  // @@protoc_insertion_point(field_add_mutable:GameList.games)
  return _s;
}
inline const std::string& GameList::games(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameList.games)
  return _internal_games().Get(index);
}
inline std::string* GameList::mutable_games(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GameList.games)
  return _internal_mutable_games()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GameList::set_games(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_games()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:GameList.games)
}
template <typename Arg_, typename... Args_>
inline void GameList::add_games(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_games(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:GameList.games)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GameList::games() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GameList.games)
  return _internal_games();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GameList::mutable_games() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GameList.games)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_games();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GameList::_internal_games() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.games_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GameList::_internal_mutable_games() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.games_;
}

// -------------------------------------------------------------------

// GameRequest

// string game_id = 1;
inline void GameRequest::clear_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.ClearToEmpty();
}
inline const std::string& GameRequest::game_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameRequest.game_id)
  return _internal_game_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameRequest::set_game_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GameRequest.game_id)
}
inline std::string* GameRequest::mutable_game_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game_id();
  // @@protoc_insertion_point(field_mutable:GameRequest.game_id)
  return _s;
}
inline const std::string& GameRequest::_internal_game_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_id_.Get();
}
inline void GameRequest::_internal_set_game_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(value, GetArena());
}
inline std::string* GameRequest::_internal_mutable_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.game_id_.Mutable( GetArena());
}
inline std::string* GameRequest::release_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameRequest.game_id)
  return _impl_.game_id_.Release();
}
inline void GameRequest::set_allocated_game_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.game_id_.IsDefault()) {
          _impl_.game_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GameRequest.game_id)
}

// string format = 2;
inline void GameRequest::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.ClearToEmpty();
}
inline const std::string& GameRequest::format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameRequest.format)
  return _internal_format();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameRequest::set_format(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GameRequest.format)
}
inline std::string* GameRequest::mutable_format() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_format();
  // @@protoc_insertion_point(field_mutable:GameRequest.format)
  return _s;
}
inline const std::string& GameRequest::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_.Get();
}
inline void GameRequest::_internal_set_format(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.Set(value, GetArena());
}
inline std::string* GameRequest::_internal_mutable_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.format_.Mutable( GetArena());
}
inline std::string* GameRequest::release_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameRequest.format)
  return _impl_.format_.Release();
}
inline void GameRequest::set_allocated_format(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.format_.IsDefault()) {
          _impl_.format_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GameRequest.format)
}

// -------------------------------------------------------------------

// GameMessage

// string message = 1;
inline void GameMessage::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& GameMessage::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameMessage.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameMessage::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GameMessage.message)
}
inline std::string* GameMessage::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:GameMessage.message)
  return _s;
}
inline const std::string& GameMessage::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void GameMessage::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* GameMessage::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* GameMessage::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameMessage.message)
  return _impl_.message_.Release();
}
inline void GameMessage::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GameMessage.message)
}

// -------------------------------------------------------------------

// PlayerRequest

// string game_id = 1;
inline void PlayerRequest::clear_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.ClearToEmpty();
}
inline const std::string& PlayerRequest::game_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlayerRequest.game_id)
  return _internal_game_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerRequest::set_game_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PlayerRequest.game_id)
}
inline std::string* PlayerRequest::mutable_game_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game_id();
  // @@protoc_insertion_point(field_mutable:PlayerRequest.game_id)
  return _s;
}
inline const std::string& PlayerRequest::_internal_game_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_id_.Get();
}
inline void PlayerRequest::_internal_set_game_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(value, GetArena());
}
inline std::string* PlayerRequest::_internal_mutable_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.game_id_.Mutable( GetArena());
}
inline std::string* PlayerRequest::release_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PlayerRequest.game_id)
  return _impl_.game_id_.Release();
}
inline void PlayerRequest::set_allocated_game_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.game_id_.IsDefault()) {
          _impl_.game_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PlayerRequest.game_id)
}

// string player = 2;
inline void PlayerRequest::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.ClearToEmpty();
}
inline const std::string& PlayerRequest::player() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlayerRequest.player)
  return _internal_player();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerRequest::set_player(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PlayerRequest.player)
}
inline std::string* PlayerRequest::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:PlayerRequest.player)
  return _s;
}
inline const std::string& PlayerRequest::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_.Get();
}
inline void PlayerRequest::_internal_set_player(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.Set(value, GetArena());
}
inline std::string* PlayerRequest::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.player_.Mutable( GetArena());
}
inline std::string* PlayerRequest::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PlayerRequest.player)
  return _impl_.player_.Release();
}
inline void PlayerRequest::set_allocated_player(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.player_.IsDefault()) {
          _impl_.player_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PlayerRequest.player)
}

// -------------------------------------------------------------------

// PlayerFieldResponse

// repeated .Ship ships = 1;
inline int PlayerFieldResponse::_internal_ships_size() const {
  return _internal_ships().size();
}
inline int PlayerFieldResponse::ships_size() const {
  return _internal_ships_size();
}
inline void PlayerFieldResponse::clear_ships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ships_.Clear();
}
inline ::Ship* PlayerFieldResponse::mutable_ships(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:PlayerFieldResponse.ships)
  return _internal_mutable_ships()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Ship>* PlayerFieldResponse::mutable_ships()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:PlayerFieldResponse.ships)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ships();
}
inline const ::Ship& PlayerFieldResponse::ships(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlayerFieldResponse.ships)
  return _internal_ships().Get(index);
}
inline ::Ship* PlayerFieldResponse::add_ships() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Ship* _add = _internal_mutable_ships()->Add();
  // @@protoc_insertion_point(field_add:PlayerFieldResponse.ships)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Ship>& PlayerFieldResponse::ships() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:PlayerFieldResponse.ships)
  return _internal_ships();
}
inline const ::google::protobuf::RepeatedPtrField<::Ship>&
PlayerFieldResponse::_internal_ships() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ships_;
}
inline ::google::protobuf::RepeatedPtrField<::Ship>*
PlayerFieldResponse::_internal_mutable_ships() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ships_;
}

// -------------------------------------------------------------------

// Ship

// int32 row = 1;
inline void Ship::clear_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = 0;
}
inline ::int32_t Ship::row() const {
  // @@protoc_insertion_point(field_get:Ship.row)
  return _internal_row();
}
inline void Ship::set_row(::int32_t value) {
  _internal_set_row(value);
  // @@protoc_insertion_point(field_set:Ship.row)
}
inline ::int32_t Ship::_internal_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.row_;
}
inline void Ship::_internal_set_row(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = value;
}

// int32 col = 2;
inline void Ship::clear_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = 0;
}
inline ::int32_t Ship::col() const {
  // @@protoc_insertion_point(field_get:Ship.col)
  return _internal_col();
}
inline void Ship::set_col(::int32_t value) {
  _internal_set_col(value);
  // @@protoc_insertion_point(field_set:Ship.col)
}
inline ::int32_t Ship::_internal_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_;
}
inline void Ship::_internal_set_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = value;
}

// -------------------------------------------------------------------

// Ships

// repeated .Ship ships = 1;
inline int Ships::_internal_ships_size() const {
  return _internal_ships().size();
}
inline int Ships::ships_size() const {
  return _internal_ships_size();
}
inline void Ships::clear_ships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ships_.Clear();
}
inline ::Ship* Ships::mutable_ships(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Ships.ships)
  return _internal_mutable_ships()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Ship>* Ships::mutable_ships()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Ships.ships)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ships();
}
inline const ::Ship& Ships::ships(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Ships.ships)
  return _internal_ships().Get(index);
}
inline ::Ship* Ships::add_ships() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Ship* _add = _internal_mutable_ships()->Add();
  // @@protoc_insertion_point(field_add:Ships.ships)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Ship>& Ships::ships() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Ships.ships)
  return _internal_ships();
}
inline const ::google::protobuf::RepeatedPtrField<::Ship>&
Ships::_internal_ships() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ships_;
}
inline ::google::protobuf::RepeatedPtrField<::Ship>*
Ships::_internal_mutable_ships() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ships_;
}

// -------------------------------------------------------------------

// PlaceShipsRequest

// string game_id = 1;
inline void PlaceShipsRequest::clear_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.ClearToEmpty();
}
inline const std::string& PlaceShipsRequest::game_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlaceShipsRequest.game_id)
  return _internal_game_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlaceShipsRequest::set_game_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PlaceShipsRequest.game_id)
}
inline std::string* PlaceShipsRequest::mutable_game_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game_id();
  // @@protoc_insertion_point(field_mutable:PlaceShipsRequest.game_id)
  return _s;
}
inline const std::string& PlaceShipsRequest::_internal_game_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_id_.Get();
}
inline void PlaceShipsRequest::_internal_set_game_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(value, GetArena());
}
inline std::string* PlaceShipsRequest::_internal_mutable_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.game_id_.Mutable( GetArena());
}
inline std::string* PlaceShipsRequest::release_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PlaceShipsRequest.game_id)
  return _impl_.game_id_.Release();
}
inline void PlaceShipsRequest::set_allocated_game_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.game_id_.IsDefault()) {
          _impl_.game_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PlaceShipsRequest.game_id)
}

// string player = 2;
inline void PlaceShipsRequest::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.ClearToEmpty();
}
inline const std::string& PlaceShipsRequest::player() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlaceShipsRequest.player)
  return _internal_player();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlaceShipsRequest::set_player(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PlaceShipsRequest.player)
}
inline std::string* PlaceShipsRequest::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:PlaceShipsRequest.player)
  return _s;
}
inline const std::string& PlaceShipsRequest::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_.Get();
}
inline void PlaceShipsRequest::_internal_set_player(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.Set(value, GetArena());
}
inline std::string* PlaceShipsRequest::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.player_.Mutable( GetArena());
}
inline std::string* PlaceShipsRequest::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PlaceShipsRequest.player)
  return _impl_.player_.Release();
}
inline void PlaceShipsRequest::set_allocated_player(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.player_.IsDefault()) {
          _impl_.player_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PlaceShipsRequest.player)
}

// .Ships ships = 3;
inline bool PlaceShipsRequest::has_ships() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ships_ != nullptr);
  return value;
}
inline void PlaceShipsRequest::clear_ships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ships_ != nullptr) _impl_.ships_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Ships& PlaceShipsRequest::_internal_ships() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Ships* p = _impl_.ships_;
  return p != nullptr ? *p : reinterpret_cast<const ::Ships&>(::_Ships_default_instance_);
}
inline const ::Ships& PlaceShipsRequest::ships() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlaceShipsRequest.ships)
  return _internal_ships();
}
inline void PlaceShipsRequest::unsafe_arena_set_allocated_ships(::Ships* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ships_);
  }
  _impl_.ships_ = reinterpret_cast<::Ships*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PlaceShipsRequest.ships)
}
inline ::Ships* PlaceShipsRequest::release_ships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Ships* released = _impl_.ships_;
  _impl_.ships_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Ships* PlaceShipsRequest::unsafe_arena_release_ships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PlaceShipsRequest.ships)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Ships* temp = _impl_.ships_;
  _impl_.ships_ = nullptr;
  return temp;
}
inline ::Ships* PlaceShipsRequest::_internal_mutable_ships() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ships_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Ships>(GetArena());
    _impl_.ships_ = reinterpret_cast<::Ships*>(p);
  }
  return _impl_.ships_;
}
inline ::Ships* PlaceShipsRequest::mutable_ships() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Ships* _msg = _internal_mutable_ships();
  // @@protoc_insertion_point(field_mutable:PlaceShipsRequest.ships)
  return _msg;
}
inline void PlaceShipsRequest::set_allocated_ships(::Ships* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ships_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ships_ = reinterpret_cast<::Ships*>(value);
  // @@protoc_insertion_point(field_set_allocated:PlaceShipsRequest.ships)
}

// -------------------------------------------------------------------

// AttackRequest

// string game_id = 1;
inline void AttackRequest::clear_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.ClearToEmpty();
}
inline const std::string& AttackRequest::game_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AttackRequest.game_id)
  return _internal_game_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttackRequest::set_game_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:AttackRequest.game_id)
}
inline std::string* AttackRequest::mutable_game_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_game_id();
  // @@protoc_insertion_point(field_mutable:AttackRequest.game_id)
  return _s;
}
inline const std::string& AttackRequest::_internal_game_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.game_id_.Get();
}
inline void AttackRequest::_internal_set_game_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.Set(value, GetArena());
}
inline std::string* AttackRequest::_internal_mutable_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.game_id_.Mutable( GetArena());
}
inline std::string* AttackRequest::release_game_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AttackRequest.game_id)
  return _impl_.game_id_.Release();
}
inline void AttackRequest::set_allocated_game_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.game_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.game_id_.IsDefault()) {
          _impl_.game_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AttackRequest.game_id)
}

// string player = 2;
inline void AttackRequest::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.ClearToEmpty();
}
inline const std::string& AttackRequest::player() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AttackRequest.player)
  return _internal_player();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttackRequest::set_player(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:AttackRequest.player)
}
inline std::string* AttackRequest::mutable_player() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player();
  // @@protoc_insertion_point(field_mutable:AttackRequest.player)
  return _s;
}
inline const std::string& AttackRequest::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_.Get();
}
inline void AttackRequest::_internal_set_player(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.Set(value, GetArena());
}
inline std::string* AttackRequest::_internal_mutable_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.player_.Mutable( GetArena());
}
inline std::string* AttackRequest::release_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AttackRequest.player)
  return _impl_.player_.Release();
}
inline void AttackRequest::set_allocated_player(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.player_.IsDefault()) {
          _impl_.player_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AttackRequest.player)
}

// int32 row = 3;
inline void AttackRequest::clear_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = 0;
}
inline ::int32_t AttackRequest::row() const {
  // @@protoc_insertion_point(field_get:AttackRequest.row)
  return _internal_row();
}
inline void AttackRequest::set_row(::int32_t value) {
  _internal_set_row(value);
  // @@protoc_insertion_point(field_set:AttackRequest.row)
}
inline ::int32_t AttackRequest::_internal_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.row_;
}
inline void AttackRequest::_internal_set_row(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = value;
}

// int32 col = 4;
inline void AttackRequest::clear_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = 0;
}
inline ::int32_t AttackRequest::col() const {
  // @@protoc_insertion_point(field_get:AttackRequest.col)
  return _internal_col();
}
inline void AttackRequest::set_col(::int32_t value) {
  _internal_set_col(value);
  // @@protoc_insertion_point(field_set:AttackRequest.col)
}
inline ::int32_t AttackRequest::_internal_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_;
}
inline void AttackRequest::_internal_set_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = value;
}

// -------------------------------------------------------------------

// AttackResponse

// string result = 1;
inline void AttackResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& AttackResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AttackResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttackResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:AttackResponse.result)
}
inline std::string* AttackResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:AttackResponse.result)
  return _s;
}
inline const std::string& AttackResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_.Get();
}
inline void AttackResponse::_internal_set_result(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.Set(value, GetArena());
}
inline std::string* AttackResponse::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* AttackResponse::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AttackResponse.result)
  return _impl_.result_.Release();
}
inline void AttackResponse::set_allocated_result(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AttackResponse.result)
}

// bool victory = 2;
inline void AttackResponse::clear_victory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.victory_ = false;
}
inline bool AttackResponse::victory() const {
  // @@protoc_insertion_point(field_get:AttackResponse.victory)
  return _internal_victory();
}
inline void AttackResponse::set_victory(bool value) {
  _internal_set_victory(value);
  // @@protoc_insertion_point(field_set:AttackResponse.victory)
}
inline bool AttackResponse::_internal_victory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.victory_;
}
inline void AttackResponse::_internal_set_victory(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.victory_ = value;
}

// string winner = 3;
inline void AttackResponse::clear_winner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winner_.ClearToEmpty();
}
inline const std::string& AttackResponse::winner() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AttackResponse.winner)
  return _internal_winner();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttackResponse::set_winner(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winner_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:AttackResponse.winner)
}
inline std::string* AttackResponse::mutable_winner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_winner();
  // @@protoc_insertion_point(field_mutable:AttackResponse.winner)
  return _s;
}
inline const std::string& AttackResponse::_internal_winner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.winner_.Get();
}
inline void AttackResponse::_internal_set_winner(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winner_.Set(value, GetArena());
}
inline std::string* AttackResponse::_internal_mutable_winner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.winner_.Mutable( GetArena());
}
inline std::string* AttackResponse::release_winner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AttackResponse.winner)
  return _impl_.winner_.Release();
}
inline void AttackResponse::set_allocated_winner(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winner_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.winner_.IsDefault()) {
          _impl_.winner_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AttackResponse.winner)
}

// int32 row = 4;
inline void AttackResponse::clear_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = 0;
}
inline ::int32_t AttackResponse::row() const {
  // @@protoc_insertion_point(field_get:AttackResponse.row)
  return _internal_row();
}
inline void AttackResponse::set_row(::int32_t value) {
  _internal_set_row(value);
  // @@protoc_insertion_point(field_set:AttackResponse.row)
}
inline ::int32_t AttackResponse::_internal_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.row_;
}
inline void AttackResponse::_internal_set_row(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = value;
}

// int32 col = 5;
inline void AttackResponse::clear_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = 0;
}
inline ::int32_t AttackResponse::col() const {
  // @@protoc_insertion_point(field_get:AttackResponse.col)
  return _internal_col();
}
inline void AttackResponse::set_col(::int32_t value) {
  _internal_set_col(value);
  // @@protoc_insertion_point(field_set:AttackResponse.col)
}
inline ::int32_t AttackResponse::_internal_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_;
}
inline void AttackResponse::_internal_set_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = value;
}

// int32 ai_row = 6;
inline void AttackResponse::clear_ai_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_row_ = 0;
}
inline ::int32_t AttackResponse::ai_row() const {
  // @@protoc_insertion_point(field_get:AttackResponse.ai_row)
  return _internal_ai_row();
}
inline void AttackResponse::set_ai_row(::int32_t value) {
  _internal_set_ai_row(value);
  // @@protoc_insertion_point(field_set:AttackResponse.ai_row)
}
inline ::int32_t AttackResponse::_internal_ai_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ai_row_;
}
inline void AttackResponse::_internal_set_ai_row(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_row_ = value;
}

// int32 ai_col = 7;
inline void AttackResponse::clear_ai_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_col_ = 0;
}
inline ::int32_t AttackResponse::ai_col() const {
  // @@protoc_insertion_point(field_get:AttackResponse.ai_col)
  return _internal_ai_col();
}
inline void AttackResponse::set_ai_col(::int32_t value) {
  _internal_set_ai_col(value);
  // @@protoc_insertion_point(field_set:AttackResponse.ai_col)
}
inline ::int32_t AttackResponse::_internal_ai_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ai_col_;
}
inline void AttackResponse::_internal_set_ai_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_col_ = value;
}

// string ai_result = 8;
inline void AttackResponse::clear_ai_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_result_.ClearToEmpty();
}
inline const std::string& AttackResponse::ai_result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AttackResponse.ai_result)
  return _internal_ai_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttackResponse::set_ai_result(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:AttackResponse.ai_result)
}
inline std::string* AttackResponse::mutable_ai_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ai_result();
  // @@protoc_insertion_point(field_mutable:AttackResponse.ai_result)
  return _s;
}
inline const std::string& AttackResponse::_internal_ai_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ai_result_.Get();
}
inline void AttackResponse::_internal_set_ai_result(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_result_.Set(value, GetArena());
}
inline std::string* AttackResponse::_internal_mutable_ai_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ai_result_.Mutable( GetArena());
}
inline std::string* AttackResponse::release_ai_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AttackResponse.ai_result)
  return _impl_.ai_result_.Release();
}
inline void AttackResponse::set_allocated_ai_result(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ai_result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ai_result_.IsDefault()) {
          _impl_.ai_result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:AttackResponse.ai_result)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_game_5fservice_2eproto_2epb_2eh
